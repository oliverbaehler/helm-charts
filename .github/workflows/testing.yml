#
# Reference: https://github.com/helm/chart-testing-action
#
name: Helm Chart Linting and Testing
on: pull_request
jobs:
  documentation:
    runs-on: ubuntu-latest
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: "$GITHUB_REF"
 
      - name: Install Dependencies
        run: |
          apk add jq git curl

      - name: Install Helm Docs
        run: |
          curl -s -L -o /usr/local/bin/helm-docs.tar.gz "https://github.com/norwoodj/helm-docs/releases/download/$(curl --silent "https://api.github.com/repos/norwoodj/helm-docs/releases/latest" | jq -r .tag_name)/helm-docs_$(curl --silent "https://api.github.com/repos/norwoodj/helm-docs/releases/latest" | jq -r .tag_name | cut -d "v" -f2-)_Linux_x86_64.tar.gz"
          cd /usr/local/bin/ && tar xfv helm-docs.tar.gz
          chmod +x ./helm-docs

      - name: Update Documentation
        run: |
          git status
          CHARTS_ROOT="./charts"
          if [ -d "${CHARTS_ROOT}" ]; then
            ## Generate Documentation
            helm-docs
            ## Push Changes
            git config user.name "$GITHUB_ACTOR"
            git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
            git add -A
            git commit -sam "Update Documentation" || true
            git push || true
          else
            echo -e "\n\e[33m-- Root Direcoty not found: $CHART_ROOT\e[0m" && exit 0;
          fi

  chart-test:
    runs-on: ubuntu-latest
    needs:
      - documentation
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Setup Chart Linting
        id: lint
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct --config ./ct.yaml list-changed)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ./ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.1.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --config ./ct.yaml
        if: steps.list-changed.outputs.changed == 'true'        

  dry-release:
    runs-on: ubuntu-latest
    needs:
      - chart-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Helm Chart Publish
        uses: buttahtoast/helm-release-action@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          dryrun: true
